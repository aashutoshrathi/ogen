// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.11.4
// source: chainrpc/proto/validators.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ValidatorsRegistry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validators []*ValidatorRegistry `protobuf:"bytes,1,rep,name=validators,proto3" json:"validators,omitempty"`
}

func (x *ValidatorsRegistry) Reset() {
	*x = ValidatorsRegistry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chainrpc_proto_validators_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorsRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorsRegistry) ProtoMessage() {}

func (x *ValidatorsRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_proto_validators_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorsRegistry.ProtoReflect.Descriptor instead.
func (*ValidatorsRegistry) Descriptor() ([]byte, []int) {
	return file_chainrpc_proto_validators_proto_rawDescGZIP(), []int{0}
}

func (x *ValidatorsRegistry) GetValidators() []*ValidatorRegistry {
	if x != nil {
		return x.Validators
	}
	return nil
}

type ValidatorRegistry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance          string `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	PublicKey        string `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	PayeeAddress     string `protobuf:"bytes,3,opt,name=payee_address,json=payeeAddress,proto3" json:"payee_address,omitempty"`
	Status           string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	FirstActiveEpoch int64  `protobuf:"varint,5,opt,name=first_active_epoch,json=firstActiveEpoch,proto3" json:"first_active_epoch,omitempty"`
	LastActiveEpoch  int64  `protobuf:"varint,6,opt,name=last_active_epoch,json=lastActiveEpoch,proto3" json:"last_active_epoch,omitempty"`
}

func (x *ValidatorRegistry) Reset() {
	*x = ValidatorRegistry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chainrpc_proto_validators_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorRegistry) ProtoMessage() {}

func (x *ValidatorRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_proto_validators_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorRegistry.ProtoReflect.Descriptor instead.
func (*ValidatorRegistry) Descriptor() ([]byte, []int) {
	return file_chainrpc_proto_validators_proto_rawDescGZIP(), []int{1}
}

func (x *ValidatorRegistry) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *ValidatorRegistry) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *ValidatorRegistry) GetPayeeAddress() string {
	if x != nil {
		return x.PayeeAddress
	}
	return ""
}

func (x *ValidatorRegistry) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ValidatorRegistry) GetFirstActiveEpoch() int64 {
	if x != nil {
		return x.FirstActiveEpoch
	}
	return 0
}

func (x *ValidatorRegistry) GetLastActiveEpoch() int64 {
	if x != nil {
		return x.LastActiveEpoch
	}
	return 0
}

type ExitValidatorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitValidatorInfo) Reset() {
	*x = ExitValidatorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chainrpc_proto_validators_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitValidatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitValidatorInfo) ProtoMessage() {}

func (x *ExitValidatorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_proto_validators_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitValidatorInfo.ProtoReflect.Descriptor instead.
func (*ExitValidatorInfo) Descriptor() ([]byte, []int) {
	return file_chainrpc_proto_validators_proto_rawDescGZIP(), []int{2}
}

type StartValidatorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartValidatorInfo) Reset() {
	*x = StartValidatorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chainrpc_proto_validators_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartValidatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartValidatorInfo) ProtoMessage() {}

func (x *StartValidatorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_proto_validators_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartValidatorInfo.ProtoReflect.Descriptor instead.
func (*StartValidatorInfo) Descriptor() ([]byte, []int) {
	return file_chainrpc_proto_validators_proto_rawDescGZIP(), []int{3}
}

var File_chainrpc_proto_validators_proto protoreflect.FileDescriptor

var file_chainrpc_proto_validators_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48,
	0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xe2, 0x01, 0x0a, 0x11, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x61, 0x79, 0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x13, 0x0a,
	0x11, 0x45, 0x78, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xdd, 0x01, 0x0a, 0x0a, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x06, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0d, 0x45,
	0x78, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x2e, 0x45,
	0x78, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x08, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x13,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x08, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x08, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x13, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_chainrpc_proto_validators_proto_rawDescOnce sync.Once
	file_chainrpc_proto_validators_proto_rawDescData = file_chainrpc_proto_validators_proto_rawDesc
)

func file_chainrpc_proto_validators_proto_rawDescGZIP() []byte {
	file_chainrpc_proto_validators_proto_rawDescOnce.Do(func() {
		file_chainrpc_proto_validators_proto_rawDescData = protoimpl.X.CompressGZIP(file_chainrpc_proto_validators_proto_rawDescData)
	})
	return file_chainrpc_proto_validators_proto_rawDescData
}

var file_chainrpc_proto_validators_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_chainrpc_proto_validators_proto_goTypes = []interface{}{
	(*ValidatorsRegistry)(nil), // 0: ValidatorsRegistry
	(*ValidatorRegistry)(nil),  // 1: ValidatorRegistry
	(*ExitValidatorInfo)(nil),  // 2: ExitValidatorInfo
	(*StartValidatorInfo)(nil), // 3: StartValidatorInfo
	(*Empty)(nil),              // 4: Empty
	(*Account)(nil),            // 5: Account
	(*Success)(nil),            // 6: Success
	(*KeyPair)(nil),            // 7: KeyPair
}
var file_chainrpc_proto_validators_proto_depIdxs = []int32{
	1, // 0: ValidatorsRegistry.validators:type_name -> ValidatorRegistry
	4, // 1: Validators.GetValidatorsList:input_type -> Empty
	2, // 2: Validators.ExitValidator:input_type -> ExitValidatorInfo
	3, // 3: Validators.StartValidator:input_type -> StartValidatorInfo
	5, // 4: Validators.GetAccountValidators:input_type -> Account
	0, // 5: Validators.GetValidatorsList:output_type -> ValidatorsRegistry
	6, // 6: Validators.ExitValidator:output_type -> Success
	7, // 7: Validators.StartValidator:output_type -> KeyPair
	0, // 8: Validators.GetAccountValidators:output_type -> ValidatorsRegistry
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chainrpc_proto_validators_proto_init() }
func file_chainrpc_proto_validators_proto_init() {
	if File_chainrpc_proto_validators_proto != nil {
		return
	}
	file_chainrpc_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chainrpc_proto_validators_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorsRegistry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chainrpc_proto_validators_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorRegistry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chainrpc_proto_validators_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitValidatorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chainrpc_proto_validators_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartValidatorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chainrpc_proto_validators_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chainrpc_proto_validators_proto_goTypes,
		DependencyIndexes: file_chainrpc_proto_validators_proto_depIdxs,
		MessageInfos:      file_chainrpc_proto_validators_proto_msgTypes,
	}.Build()
	File_chainrpc_proto_validators_proto = out.File
	file_chainrpc_proto_validators_proto_rawDesc = nil
	file_chainrpc_proto_validators_proto_goTypes = nil
	file_chainrpc_proto_validators_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ValidatorsClient is the client API for Validators service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ValidatorsClient interface {
	GetValidatorsList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ValidatorsRegistry, error)
	ExitValidator(ctx context.Context, in *ExitValidatorInfo, opts ...grpc.CallOption) (*Success, error)
	StartValidator(ctx context.Context, in *StartValidatorInfo, opts ...grpc.CallOption) (*KeyPair, error)
	GetAccountValidators(ctx context.Context, in *Account, opts ...grpc.CallOption) (*ValidatorsRegistry, error)
}

type validatorsClient struct {
	cc grpc.ClientConnInterface
}

func NewValidatorsClient(cc grpc.ClientConnInterface) ValidatorsClient {
	return &validatorsClient{cc}
}

func (c *validatorsClient) GetValidatorsList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ValidatorsRegistry, error) {
	out := new(ValidatorsRegistry)
	err := c.cc.Invoke(ctx, "/Validators/GetValidatorsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorsClient) ExitValidator(ctx context.Context, in *ExitValidatorInfo, opts ...grpc.CallOption) (*Success, error) {
	out := new(Success)
	err := c.cc.Invoke(ctx, "/Validators/ExitValidator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorsClient) StartValidator(ctx context.Context, in *StartValidatorInfo, opts ...grpc.CallOption) (*KeyPair, error) {
	out := new(KeyPair)
	err := c.cc.Invoke(ctx, "/Validators/StartValidator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorsClient) GetAccountValidators(ctx context.Context, in *Account, opts ...grpc.CallOption) (*ValidatorsRegistry, error) {
	out := new(ValidatorsRegistry)
	err := c.cc.Invoke(ctx, "/Validators/GetAccountValidators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ValidatorsServer is the server API for Validators service.
type ValidatorsServer interface {
	GetValidatorsList(context.Context, *Empty) (*ValidatorsRegistry, error)
	ExitValidator(context.Context, *ExitValidatorInfo) (*Success, error)
	StartValidator(context.Context, *StartValidatorInfo) (*KeyPair, error)
	GetAccountValidators(context.Context, *Account) (*ValidatorsRegistry, error)
}

// UnimplementedValidatorsServer can be embedded to have forward compatible implementations.
type UnimplementedValidatorsServer struct {
}

func (*UnimplementedValidatorsServer) GetValidatorsList(context.Context, *Empty) (*ValidatorsRegistry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidatorsList not implemented")
}
func (*UnimplementedValidatorsServer) ExitValidator(context.Context, *ExitValidatorInfo) (*Success, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExitValidator not implemented")
}
func (*UnimplementedValidatorsServer) StartValidator(context.Context, *StartValidatorInfo) (*KeyPair, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartValidator not implemented")
}
func (*UnimplementedValidatorsServer) GetAccountValidators(context.Context, *Account) (*ValidatorsRegistry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountValidators not implemented")
}

func RegisterValidatorsServer(s *grpc.Server, srv ValidatorsServer) {
	s.RegisterService(&_Validators_serviceDesc, srv)
}

func _Validators_GetValidatorsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorsServer).GetValidatorsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Validators/GetValidatorsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorsServer).GetValidatorsList(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Validators_ExitValidator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExitValidatorInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorsServer).ExitValidator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Validators/ExitValidator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorsServer).ExitValidator(ctx, req.(*ExitValidatorInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Validators_StartValidator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartValidatorInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorsServer).StartValidator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Validators/StartValidator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorsServer).StartValidator(ctx, req.(*StartValidatorInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Validators_GetAccountValidators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorsServer).GetAccountValidators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Validators/GetAccountValidators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorsServer).GetAccountValidators(ctx, req.(*Account))
	}
	return interceptor(ctx, in, info, handler)
}

var _Validators_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Validators",
	HandlerType: (*ValidatorsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetValidatorsList",
			Handler:    _Validators_GetValidatorsList_Handler,
		},
		{
			MethodName: "ExitValidator",
			Handler:    _Validators_ExitValidator_Handler,
		},
		{
			MethodName: "StartValidator",
			Handler:    _Validators_StartValidator_Handler,
		},
		{
			MethodName: "GetAccountValidators",
			Handler:    _Validators_GetAccountValidators_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chainrpc/proto/validators.proto",
}
